---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-cluster-service
  name: redis-cluster-service
  namespace: tomato
spec:
  clusterIP: None
  selector:
    app: redis-cluster
  ports:
    - name: redis-port
      port: 6379
      protocol: TCP
  
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: redis-cluster-stateful-set
  name: redis-cluster-stateful-set
  namespace: tomato
spec:
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  serviceName: redis-cluster-service
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers: 
        - command: 
            ["/bin/bash", "/usr/local/etc/redis/update-node-ip.sh","redis-server", "/usr/local/etc/redis/redis.conf"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: TZ
              value: Asia/Shanghai
          image: redis:6.2.6
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
              name: redis-port
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: redis-cluster-pvc
              readOnly: false
            - mountPath: /usr/local/etc/redis
              name: redis-config
              readOnly: false
          readinessProbe:
            exec:
              command:
                ["/bin/sh", "-c", "redis-cli -h $(hostname) ping"]
          livenessProbe:
            exec:
              command:
                ["/bin/sh", "-c", "redis-cli -h $(hostname) ping"]
      dnsPolicy: ClusterFirst
      volumes:
        - name: redis-config
          configMap:
            name: redis-cluster-config-map
  volumeClaimTemplates:
  - metadata:
      name: redis-cluster-pvc
      namespace: tomato
    spec:
      storageClassName: manual
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  
# dns redis-cluster-stateful-set-x.redis-cluster-service.tomato.svc.cluster.local
# kubectl get pods -l app=redis-cluster -n tomato -o jsonpath='{range.items[*]}{.status.podIP}:6379 ' 获取所有ip
# redis-cli --cluster create --cluster-replicas 1 ip:port ip:port ip:port ip:port ip:port 
# redis-cli cluster info 集群信息
# redis-cli cluster nodes 集群节点
# redis-cli -c 集群模式登录